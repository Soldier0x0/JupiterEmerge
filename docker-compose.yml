services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: jupiter-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-changeme123}
      MONGO_INITDB_DATABASE: jupiter_siem
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - jupiter-net
    ports:
      - "127.0.0.1:27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/jupiter_siem --quiet
      interval: 20s
      timeout: 5s
      retries: 10

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: jupiter-backend
    restart: always
    env_file:
      - ./backend/.env
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - jupiter-net
    ports:
      - "127.0.0.1:8001:8001"
    volumes:
      - ./backend/logs:/app/logs
      - ./backups:/app/backups
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 20s
      timeout: 5s
      retries: 6

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: jupiter-frontend
    restart: always
    networks:
      - jupiter-net
    ports:
      - "127.0.0.1:3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 20s
      timeout: 5s
      retries: 6

volumes:
  mongodb_data:
    driver: local

networks:
  jupiter-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16